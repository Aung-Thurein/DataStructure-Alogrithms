package com.turing.dsa.adt.two34tree;

import static org.junit.jupiter.api.Assertions.assertEquals;

import org.junit.jupiter.api.Test;

public class Two34TreeInsertTest {

	@Test
	public void testLeafBaseCase()
	{
	
		TwoThreeFourTree<Integer> tree = new TwoThreeFourTree();
		tree.insert(10);
		tree.insert(5);
		tree.insert(100);
		
		Node<Integer> root = tree.getRoot();
		
		assertEquals(5, root.key[0]);
		assertEquals(10, root.key[1]);
		assertEquals(100, root.key[2]);
		
	}
	
	@Test
	public void testBaseCaseSearch()
	{
		TwoThreeFourTree<Integer> tree = new TwoThreeFourTree<Integer>();
		tree.insert(10);
		tree.insert(5);
		tree.insert(100);
		
		assertEquals(5, tree.search(5));
		assertEquals(10, tree.search(10));
		assertEquals(100, tree.search(100));
		assertEquals(null, tree.search(15));
	}
	
	@Test
	public void testLevel()
	{ /*
		[103]
	[100]   [108,112] */			
		Node<Integer> root = new Node<Integer>();
		root.insertKey(103);
		
		Node<Integer> left = new Node<Integer>();
		left.insertKey(100);
		
		Node<Integer> right = new Node<Integer>();
		right.insertKey(108);
		right.insertKey(112);
		
		root.getChildren().add(left);
		root.getChildren().add(right);
		
		TwoThreeFourTree<Integer> tree =  new TwoThreeFourTree<Integer>(root);
		assertEquals(103, tree.search(103));
		assertEquals(100, tree.search(100));
		assertEquals(108, tree.search(108));
		assertEquals(112, tree.search(112));
		assertEquals(null, tree.search(107));
		assertEquals(null, tree.search(115));
	}
	
	@Test
	public void testLevel3()
	{""
	
}
