package com.turing.dsa.adt.Linkedlist.doublylinkedlist;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertTrue;

import java.util.Iterator;

import org.junit.jupiter.api.Test;

import com.turing.dsa.adt.Linkedlist.doublylinkedlist.DoublyLinkedList.DoublyLinkedListIterator;

public class DoublyLinkedListTest {

	
	@Test
	public void testInsertFirstEmpty() {
		DoublyLinkedList list = new DoublyLinkedList();
		DoublyNode node = new DoublyNode(10);
		
		list.insertFirst(node);
		
		assertEquals(false, list.isEmpty());
		assertEquals(node, list.getFirst());
		assertEquals(node, list.getLast());
	}
	
	
	@Test
	public void testInsertFirtNonEmptyCase() {
		
		DoublyLinkedList list = new DoublyLinkedList();
		
		
		DoublyNode first = new DoublyNode(10);
		DoublyNode second = new DoublyNode(20);
		
		list.insertFirst(first);
		list.insertFirst(second);
		
		Iterator <DoublyNode> iterator = list.iterator();

		DoublyNode element1 = iterator.next();
		assertEquals(second, element1);
		
		DoublyNode element2 = iterator.next();
		assertEquals(first, element2);
		
		assertEquals(false, iterator.hasNext());
		
		assertTrue(list.getFirst() == element1);
		assertTrue(list.getLast() == element2);

		
		assertTrue(element1.getNext() == element2);
		assertTrue(element2.getPrevious() == element1);
	}
}
